generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(dbgenerated("gen_random_uuid()"))
  email      String   @unique
  avatarUrl  String?  @map("avatar_url")
  password   String
  createdAt  DateTime @default(now()) @map("created_at")
  isVerified Boolean  @default(false) @map("is_verified")
  firstName  String   @map("first_name")
  lastName   String   @map("last_name")

  roleId               String                @map("role_id")
  role                 Role                  @relation(fields: [roleId], references: [id])
  verificationToken    VerificationToken?
  verificationAttempts VerificationAttempt[]

  @@map("users")
}

model Role {
  id       String @id @default(dbgenerated("gen_random_uuid()"))
  roleName String @unique @map("role_name")

  users User[]

  @@map("roles")
}

model VerificationToken {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  token     String
  createdAt DateTime @default(now()) @map("created_at")

  userId String @unique @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("verification_tokens")
}

model VerificationAttempt {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  createdAt DateTime @default(now()) @map("created_at")

  userId String @unique @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("verification_attempts")
}
